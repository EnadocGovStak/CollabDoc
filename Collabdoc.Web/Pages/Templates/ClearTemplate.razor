@page "/templates/clear/{id:int}"
@using Collabdoc.Web.Data
@using Collabdoc.Web.Data.Entities
@using Microsoft.EntityFrameworkCore
@inject CollabdocDbContext DbContext
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<PageTitle>Clear Template</PageTitle>

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h3>Clear Template Content</h3>
            
            @if (template != null)
            {
                <div class="alert alert-warning">
                    <h5>Template: @template.Name</h5>
                    <p>Current content length: @(template.Content?.Length ?? 0) characters</p>
                    <p>This will clear the content so you can resave it with the correct format.</p>
                    
                    <button class="btn btn-warning" @onclick="ClearContent">Clear Content</button>
                    <button class="btn btn-secondary" @onclick="GoBack">Cancel</button>
                </div>
            }
            else if (searched)
            {
                <div class="alert alert-danger">
                    Template with ID @Id not found.
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public int Id { get; set; }
    
    private Document? template;
    private bool searched = false;

    protected override async Task OnInitializedAsync()
    {
        template = await DbContext.Documents
            .Where(d => d.Id == Id && d.IsTemplate)
            .FirstOrDefaultAsync();
        searched = true;
    }

    private async Task ClearContent()
    {
        if (template != null)
        {
            template.Content = "{}";
            template.LastModified = DateTime.UtcNow;
            
            await DbContext.SaveChangesAsync();
            
            await JSRuntime.InvokeVoidAsync("alert", "Template content cleared! You can now edit and resave it.");
            Navigation.NavigateTo($"/templates/editor/{Id}");
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/templates");
    }
} 